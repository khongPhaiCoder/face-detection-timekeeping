
//File: index_ov2640.html.gz, Size: 4316
#define index_ov2640_html_gz_len 4316
const uint8_t index_ov2640_html_gz[] = {
0x1f,0x8b,0x08,0x08,0x1e,0x08,0x28,0x5f,0x00,0xff,0x69,0x6e,0x64,0x65,0x78,0x2e,0x68,0x74,0x6d,0x6c,0x2e,0x67,0x7a,0x00,0xe5,0x1c,0x6b,0x93,0x9b,0x46,0xf2,0xb3,0xfd,0x2b,0x30,0x76,0x2c,0x6d,0x79,0xa5,0x95,0xb4,0xca,0x7a,0xad,0xac,0xe4,0x73,0xec,0x4d,0xec,0x2a,0xe7,0xf2,0x70,0xe2,0x4b,0x55,0x2a,0x65,0x23,0x18,0x49,0xc4,0x08,0x38,0x1e,0x7a,0xc4,0xb7,0xbf,0xf3,0xfe,0x4e,0xba,0x67,0x86,0x61,0x80,0x61,0x40,0xda,0x5c,0x2e,0x77,0xd1,0xeb,0x01,0x3d,0x3d,0xdd,0x3d,0xfd,0x66,0xa4,0xab,0x7b,0x4e,0x60,0x27,0xfb,0x90,0x18,0xab,0x64,0xed,0xcd,0xee,0x5e,0xb1,0x37,0x03,0x6e,0x57,0x2b,0x62,0x39,0xec,0x23,0xfd,0xba,0x26,0x89,0x65,0xd8,0x2b,0x2b,0x8a,0x49,0x32,0x35,0xd3,0x64,0xd1,0xbb,0x34,0xcb,0xa7,0x7d,0x6b,0x4d,0xa6,0xe6,0xc6,0x25,0xdb,0x30,0x88,0x12,0xd3,0xb0,0x03,0x3f,0x21,0x3e,0x80,0x6f,0x5d,0x27,0x59,0x4d,0x1d,0xb2,0x71,0x6d,0xd2,0xa3,0x5f,0x4e,0x5d,0xdf,0x4d,0x5c,0xcb,0xeb,0xc5,0xb6,0xe5,0x91,0xe9,0x50,0xc6,0x95,0xb8,0x89,0x47,0x66,0xd7,0x6f,0xbe,0x39,0x1f,0x19,0x5f,0xbf,0x1d,0x8d,0x2f,0x06,0x57,0x67,0xec,0x58,0x0e,0x13,0x27,0x7b,0xf9,0x3b,0xde,0xe6,0x81,0xb3,0x37,0x3e,0x16,0x0e,0xe1,0x6d,0x01,0x44,0xf4,0x16,0xd6,0xda,0xf5,0xf6,0x13,0xe3,0x59,0x04,0x73,0x9e,0xbe,0x24,0xde,0x86,0x24,0xae,0x6d,0x9d,0xc6,0x96,0x1f,0xf7,0x62,0x12,0xb9,0x8b,0xcf,0x2a,0x03,0xe7,0x96,0xfd,0x61,0x19,0x05,0xa9,0xef,0x4c,0x8c,0xfb,0xc3,0x4b,0xbc,0x57,0x81,0xec,0xc0,0x0b,0x22,0x38,0x7f,0xfd,0x05,0xde,0xab,0xe7,0xe9,0xec,0xb1,0xfb,0x2b,0x99,0x18,0xc3,0x8b,0x70,0x57,0x38,0x7f,0x73,0xb7,0xf0,0x75,0x35,0xaa,0xa3,0x9e,0x8f,0xbf,0xd4,0x8f,0x8f,0x89,0x9d,0xb8,0x81,0xdf,0x5f,0x5b,0xae,0xaf,0xc0,0xe4,0xb8,0x71,0xe8,0x59,0x20,0x83,0x85,0x47,0xb4,0x78,0xee,0xaf,0x89,0x9f,0x9e,0x36,0x60,0x43,0x24,0x3d,0xc7,0x8d,0x18,0xd4,0x04,0xe5,0x90,0xae,0xfd,0x46,0xb4,0x3a,0xba,0xfc,0xc0,0x27,0x0a,0x01,0xe2,0x44,0xdb,0xc8,0x0a,0x11,0x00,0xdf,0xab,0x20,0x6b,0xd7,0x67,0x4a,0x35,0x31,0xce,0xc7,0x83,0x70,0xd7,0xb0,0x94,0xe7,0x17,0x78,0xaf,0x02,0x85,0x96,0xe3,0xb8,0xfe,0x72,0x62,0x80,0x9c,0x15,0x28,0x82,0xc8,0x21,0x51,0x2f,0xb2,0x1c,0x37,0x8d,0x27,0xc6,0x58,0x05,0xb3,0xb6,0xa2,0x25,0xd0,0x92,0x04,0x40,0x6c,0x6f,0xa8,0xa4,0x84,0x83,0x44,0xee,0x72,0x95,0xc0,0x92,0x56,0x60,0xca,0x42,0xe3,0x26,0xd4,0xb4,0x9e,0x5a,0xb9,0xa9,0xa5,0x66,0x79,0xee,0xd2,0xef,0xb9,0x09,0x59,0x03,0x3b,0x71,0x12,0x91,0xc4,0x5e,0xe9,0x48,0x59,0xb8,0xcb,0x34,0x22,0x0a,0x42,0x84,0xdc,0x34,0x0c,0xc3,0xc9,0xea,0xa9,0xde,0x96,0xcc,0x3f,0xb8,0x49,0x8f,0xcb,0x64,0x4e,0x16,0x41,0x04,0x7a,0xae,0x80,0xcc,0x20,0xbc,0xc0,0xfe,0xd0,0x8b,0x13,0x2b,0x02,0xd9,0x35,0x23,0xb4,0x16,0x09,0x01,0xdb,0x6c,0xc2,0x47,0x50,0x2b,0x9a,0xb1,0xd5,0x4f,0xcb,0x01,0x5c,0xdf,0x73,0x7d,0xd2,0x9e,0xbc,0xba,0x79,0x8b,0xe8,0x18,0x54,0x8b,0x85,0x71,0xd7,0x4b,0x9d,0x96,0x50,0x5e,0xab,0x93,0x71,0xbb,0x19,0x0e,0x06,0x9f,0x54,0x4f,0xae,0x08,0x53,0x53,0x2b,0x4d,0x82,0xdb,0x5b,0x44,0xc5,0xac,0x4a,0x7c,0xfc,0x6d,0x4d,0x1c,0xd7,0x32,0xba,0x92,0x39,0x5f,0x0e,0x40,0xa7,0x4e,0x0c,0xcb,0x77,0x8c,0x6e,0x10,0xb9,0x60,0x08,0x16,0x75,0x37,0x1e,0x1c,0x81,0xc0,0x11,0x92,0x13,0x05,0xcb,0x1a,0x9b,0x91,0x25,0xa2,0x36,0x9b,0x96,0x2e,0xa7,0x95,0x01,0x29,0x78,0x6c,0x5c,0xaf,0x36,0x6b,0xc6,0x04,0x0b,0x24,0xea,0xd6,0x2e,0x03,0xca,0xd6,0x10,0xc2,0xac,0xdd,0x05,0xd0,0xcd,0xca,0xe8,0x19,0xe8,0x25,0x4f,0xd4,0x63,0x38,0x52,0xf5,0x92,0x97,0x95,0xe2,0x00,0x76,0xd5,0xac,0xe6,0xbe,0x83,0xdd,0x55,0x3a,0xd4,0xe0,0x45,0x0e,0xf3,0x24,0x07,0x78,0x93,0x83,0x3c,0x4a,0x6b,0xaf,0x72,0x90,0x67,0x39,0xc4,0xbb,0x1c,0xe0,0x61,0x5a,0x79,0x19,0xb6,0x9c,0xcd,0xf9,0xc6,0xfd,0x79,0x9a,0x24,0x81,0x1f,0xdf,0x2a,0x44,0xd5,0xd9,0xd9,0x2f,0x69,0x9c,0xb8,0x8b,0x7d,0x8f,0x9b,0x34,0xd8,0x59,0x68,0x41,0x0a,0x39,0x27,0xc9,0x96,0x10,0x7d,0xba,0xe1,0x5b,0x1b,0xf0,0x3b,0xcb,0xa5,0xa7,0xd2,0x3d,0x3b,0x8d,0x62,0xcc,0xdb,0xc2,0xc0,0x05,0xc4,0x51,0x75,0xe2,0xa2,0x0d,0xb6,0x9c,0xa8,0x67,0xcf,0x15,0x73,0x05,0x69,0x82,0x32,0x56,0xae,0x44,0x00,0xec,0xb8,0x09,0x4c,0xa3,0x38,0xc7,0x2d,0x51,0x71,0x26,0x33,0x41,0x6d,0x58,0x28,0xd2,0x35,0xb1,0x57,0xc4,0xfe,0x40,0x9c,0x47,0x8d,0x69,0x58,0x53,0x7a,0xd8,0x77,0xfd,0x30,0x4d,0x7a,0x98,0x4e,0x85,0xff,0x91,0x35,0xa7,0x0a,0x99,0xb1,0x38,0x1a,0xe9,0x92,0x8a,0x4f,0xc3,0x9d,0x5e,0x08,0x32,0xb1,0x33,0xcf,0x9a,0x13,0x4f,0x47,0x32,0x37,0x86,0x1a,0xb7,0xcb,0x7d,0x55,0x7d,0xee,0x56,0xca,0x45,0xc7,0x8f,0x3f,0x69,0x2d,0x47,0xfa,0xf9,0xb4,0x70,0x28,0x26,0x1e,0x18,0x58,0x5d,0xea,0x0d,0x30,0x5b,0xa0,0x41,0x3b,0x41,0x64,0xf9,0x4b,0x02,0xbe,0x60,0x77,0x9a,0x7d,0xd4,0x17,0x06,0xad,0xd8,0x47,0x57,0x0d,0x62,0xd7,0x4d,0xcc,0x1c,0xc2,0x11,0xc9,0x88,0xb4,0xac,0xda,0xf9,0x87,0x4a,0xa5,0x60,0xf9,0x88,0xd2,0x60,0x8a,0x2a,0xa5,0xcc,0xef,0x1b,0x3d,0x42,0x56,0xe9,0x2d,0x16,0x4d,0xb5,0xe2,0x62,0x71,0x3e,0x38,0x1f,0x37,0x26,0x4c,0x4a,0x2e,0x4b,0xf5,0xa2,0xc2,0x63,0x08,0x6f,0xd2,0xbc,0x04,0x93,0x55,0xb0,0x21,0x91,0x62,0x21,0x4a,0xe4,0x8e,0x9f,0x8c,0x9d,0x16,0xd8,0x2c,0xf0,0xf7,0x1b,0x95,0x37,0x2d,0xa2,0x1b,0x0d,0xed,0x91,0x56,0x31,0x19,0xba,0x3e,0x68,0x83,0x35,0xf7,0x88,0xa3,0x71,0xcf,0x0e,0x59,0x58,0xa9,0x97,0x34,0xc8,0xdb,0x1a,0xe0,0x5d,0x37,0x23,0xb5,0xab,0x9f,0xb0,0xd1,0x31,0xa5,0x96,0xf0,0xb3,0x62,0xce,0x2c,0x76,0x5a,0x61,0x48,0x2c,0x80,0xb2,0x41,0xc6,0xea,0x92,0xb4,0x55,0xce,0xac,0x76,0x5c,0xad,0x0a,0xd1,0x46,0x55,0x14,0xd9,0xd0,0x41,0x3c,0x4f,0x16,0x81,0x9d,0xaa,0xc2,0x74,0x3b,0x95,0xaa,0xe2,0x9b,0x64,0x22,0x8b,0x3d,0x97,0x2a,0x76,0xea,0xfb,0xb8,0xa2,0xbd,0x24,0x02,0x36,0x15,0x13,0xb5,0x13,0xdc,0x51,0xd6,0x59,0x10,0x6c,0x5d,0x33,0xa6,0x64,0x80,0x0a,0x47,0x21,0x7c,0x88,0x11,0x07,0xc0,0x54,0x86,0xea,0x76,0x72,0x49,0x56,0xe9,0x5a,0x95,0x18,0x64,0x93,0x0d,0x21,0x8a,0xb1,0xe9,0xa2,0xe5,0xdc,0xea,0x0e,0x4e,0x07,0xa7,0xe7,0xf0,0xa2,0x48,0xd0,0xf5,0xca,0xc5,0xc5,0x5b,0xa3,0x79,0x25,0xe7,0xd3,0xdc,0x27,0xa9,0x73,0x63,0x8d,0x6b,0xd1,0xde,0x92,0x8a,0x0d,0x93,0x61,0xbf,0x21,0xb0,0xd4,0xa8,0xf4,0xe1,0x8a,0xa8,0xd0,0x96,0x43,0x97,0x78,0x1d,0xfc,0x0a,0xc2,0xc4,0xa8,0xfa,0x97,0xd7,0x76,0x49,0x14,0xff,0xd7,0x9a,0x7e,0xb0,0x5c,0xe2,0xff,0xb6,0x6e,0x40,0x45,0x5d,0x2b,0x1f,0x9e,0xcf,0x00,0x85,0x3e,0x14,0x55,0x11,0x54,0x57,0xb5,0x39,0x8f,0x04,0x73,0x84,0x0c,0x16,0xae,0xe7,0xf5,0xbc,0x60,0xdb,0x9c,0x89,0xe8,0x35,0xb9,0xa2,0xa7,0xcd,0x2a,0x7f,0x2c,0xb5,0x29,0x78,0xae,0xff,0x09,0x6a,0xff,0x6a,0xa1,0x45,0x32,0x8d,0xe3,0x02,0xc5,0x11,0xfa,0x78,0xbb,0x89,0x5a,0xa9,0x12,0xcb,0x04,0xb5,0xc5,0x5c,0xbc,0x75,0xa1,0xbf,0x78,0x44,0x51,0x15,0x06,0x31,0x5c,0x69,0xc3,0x6b,0x34,0x11,0xf1,0xa0,0x7d,0xba,0x51,0xc4,0xe1,0x16,0x25,0x77,0x63,0x61,0x22,0x0f,0x6f,0xc3,0x09,0x15,0xdd,0x9f,0xa7,0x5d,0xd2,0x67,0xb9,0x43,0xbd,0xaf,0x56,0xab,0x75,0x43,0xba,0x5f,0xb4,0x0c,0x35,0xd0,0x01,0x1e,0x3d,0x73,0xda,0xcb,0x88,0xec,0x5b,0x30,0x73,0xca,0xdf,0x27,0xac,0x21,0x7a,0x7c,0xed,0x4f,0x03,0x00,0xd7,0xa2,0xfe,0x38,0x6e,0x31,0x75,0xfd,0x94,0x6d,0xf4,0x51,0xb4,0xfb,0x4c,0xb3,0x85,0xbb,0xd1,0x84,0x50,0xb5,0xaa,0x66,0xd1,0x57,0x79,0xd2,0x23,0x0b,0x18,0xa8,0xbc,0x9a,0x41,0xf3,0xd4,0x73,0xbd,0x77,0xcb,0x96,0x08,0xfb,0x04,0x8d,0x9e,0x43,0x74,0xe5,0xea,0xb5,0x4f,0x89,0x19,0xbd,0xe7,0xc1,0xc8,0xeb,0x97,0x24,0x4b,0x9f,0xe9,0x32,0x03,0xcc,0x9a,0x87,0x7c,0x58,0x1e,0xf2,0x63,0x77,0x04,0x62,0x52,0x04,0x0c,0x0d,0xb0,0xbe,0x6b,0x5c,0xd3,0xd6,0xaa,0x86,0xac,0xda,0x02,0x59,0xf6,0x45,0xca,0x85,0xd2,0x5b,0xa5,0xce,0xc3,0x54,0x7b,0x34,0xfa,0x1e,0xde,0xda,0x82,0xb4,0x17,0xd5,0x15,0x2e,0x93,0x2b,0xd7,0xaf,0x8d,0xba,0x4b,0x4d,0xc3,0xe1,0x05,0xb8,0x19,0xed,0x94,0xb6,0x17,0xc4,0x7a,0xbb,0xb2,0xe6,0x20,0xbf,0x34,0x51,0x4c,0xc4,0x5b,0x97,0xca,0xce,0x13,0x55,0x6e,0xe5,0x99,0x56,0xa1,0x5b,0x6b,0x53,0x7a,0x73,0x2c,0xc9,0x1c,0x92,0x62,0xa5,0x9b,0xd4,0xf5,0xdf,0x12,0xb2,0x83,0x7a,0x13,0x2f,0xc8,0xc1,0x95,0x2e,0xf0,0x1c,0x2a,0x37,0x5a,0x08,0x72,0xb8,0x99,0xe2,0x56,0x09,0x7f,0x7f,0xe5,0x3a,0x0e,0xd1,0x76,0x39,0xb1,0xe6,0x2d,0xa1,0x10,0xfb,0x57,0xce,0xa4,0x0d,0x2c,0x57,0x67,0xf9,0x5e,0x9b,0x2b,0xdc,0xc5,0x22,0xef,0x73,0x61,0x17,0x59,0x0c,0xdb,0xb3,0xe2,0x78,0x6a,0xe2,0x6e,0x0c,0x69,0xab,0x0c,0x05,0x71,0xdc,0x8d,0xe1,0x3a,0x53,0xd3,0x0b,0x96,0x41,0xe9,0x1c,0x3d,0xcf,0xda,0xde,0x60,0xa9,0x53,0xb3,0x70,0x49,0xc0,0xa4,0xa3,0xf2,0x43,0xe6,0xec,0xe1,0xfd,0x27,0x8f,0x1f,0x5f,0x7c,0xf6,0xd0,0x9f,0xc7,0x21,0x7f,0x7d,0x19,0xac,0x89,0xf1,0x16,0x76,0xf4,0x90,0x28,0x36,0x5e,0x05,0xdf,0x1b,0xff,0x32,0x5e,0x7d,0xff,0xca,0x18,0x0d,0x46,0xb0,0x29,0x87,0x62,0x2e,0x51,0x73,0x06,0xe4,0xd4,0x10,0xc8,0xbd,0xba,0x8a,0xc6,0x0c,0x24,0x06,0x47,0x35,0xb7,0x22,0x05,0x08,0x05,0x63,0x39,0x03,0x4d,0xb7,0x4c,0xea,0xdd,0xe6,0xc1,0xae,0xcc,0x06,0xe5,0x8c,0xbb,0x3e,0x0e,0x45,0x9c,0x3a,0x84,0x30,0x8c,0x0e,0xc7,0x8b,0x22,0x00,0x73,0x87,0xde,0x28,0x35,0x5c,0xe0,0x52,0x47,0x9e,0x4d,0xb4,0x88,0x60,0x93,0x13,0xfa,0x1e,0x7e,0x50,0x8d,0x58,0x25,0x7c,0x31,0xd2,0x9c,0x7d,0x47,0xa8,0x85,0xc2,0xc2,0x2a,0x85,0x58,0xc1,0xc2,0x9d,0x66,0x61,0x7e,0x60,0x92,0x91,0xc8,0x9b,0xa4,0x3d,0x6c,0xcf,0x06,0x65,0xed,0x50,0xa2,0x0b,0x42,0xaa,0x53,0x1b,0xcb,0x4b,0x41,0x90,0xc3,0x81,0x39,0xfb,0xe1,0xc7,0x2f,0x9f,0x75,0xc1,0xf7,0x0c,0x76,0xc3,0xd1,0x60,0x70,0x72,0x75,0xc6,0x40,0x0e,0xc6,0xf5,0xc4,0x9c,0xbd,0xa1,0xa8,0x46,0x97,0x80,0x6a,0x30,0x1a,0x1f,0x8f,0x0a,0xb6,0x97,0x51,0x4c,0x80,0x64,0xf7,0xf8,0xe2,0xf2,0x78,0x44,0x8f,0x81,0xa6,0xb7,0x80,0x09,0x36,0x13,0xec,0x80,0xc3,0xe3,0x11,0x5d,0x98,0x33,0xc4,0x73,0x31,0x1e,0xec,0xc6,0x97,0xb7,0xc0,0xf3,0xa9,0xc9,0xa3,0x20,0x2a,0x68,0xf6,0xc9,0x9c,0x3d,0x7f,0xf5,0x45,0x77,0x0c,0x34,0x8e,0x9e,0x5c,0x1c,0x8f,0x7b,0x6c,0xce,0xbe,0x45,0x22,0xcf,0x47,0x80,0x68,0x7c,0x0b,0x22,0xcf,0xcd,0xd9,0x4b,0x8a,0x09,0xb0,0xec,0x86,0x8f,0x6f,0x41,0x12,0xa8,0xd7,0xb7,0x14,0x13,0xe8,0x17,0xaa,0x57,0x4b,0x4c,0xe0,0x22,0xa9,0x68,0xea,0xa1,0xb8,0xaf,0xa9,0x31,0x57,0x83,0x39,0x68,0x66,0xb5,0xd6,0xd2,0x7e,0xb7,0x04,0xdf,0xa9,0x30,0x5a,0xd9,0x44,0x33,0x30,0x73,0xf6,0x25,0xbc,0xb6,0xb3,0x4d,0x69,0x76,0x71,0x95,0xcd,0x9c,0x0d,0x77,0x0a,0x4f,0xa8,0xf5,0x67,0x74,0x70,0x91,0x5a,0x13,0x33,0x03,0x14,0x20,0xee,0xe4,0x80,0x25,0x81,0x0f,0xb9,0x0a,0x1d,0x63,0xfd,0x0a,0x62,0xad,0x9d,0x39,0x3b,0x6f,0xa0,0x56,0x2f,0x68,0xee,0x17,0xe1,0xba,0xfc,0x3b,0x87,0x24,0xb0,0x62,0x0d,0x42,0x96,0x20,0xcd,0xd9,0x17,0xf0,0xc5,0x78,0x41,0xbf,0xb4,0xf6,0x86,0x12,0x19,0xac,0x96,0x6c,0xe3,0xf3,0x98,0xa8,0x4b,0x94,0x9a,0x95,0x58,0x72,0xb4,0x4f,0x65,0x0c,0x66,0x64,0xd1,0x84,0xdb,0x54,0xf0,0xdb,0x8e,0xc3,0xdb,0x2e,0x06,0x5c,0x55,0x6b,0x58,0x04,0x80,0x78,0x67,0xaf,0xc1,0xeb,0xbc,0xbe,0x7e,0xf1,0x87,0x48,0x3d,0x9b,0xf0,0x8f,0x90,0xb8,0x60,0xee,0xf7,0x93,0x76,0x96,0x87,0x21,0x2b,0x7c,0xc3,0x4b,0x51,0xb6,0xfc,0xa2,0x37,0x9e,0x5f,0x12,0xa8,0x4e,0x12,0x68,0xfe,0x80,0x1b,0x21,0x89,0xf1,0x06,0x3f,0x5e,0x9d,0x31,0x80,0x06,0x52,0x24,0x2c,0x3c,0x9b,0xc1,0x8d,0x65,0xd6,0x1a,0x42,0x18,0x6e,0xfc,0x01,0x5c,0xf8,0xad,0x1d,0xb2,0x5a,0x8e,0x38,0x2f,0x59,0xba,0xa3,0x80,0xbb,0x3a,0x83,0xc4,0x88,0x9f,0xbf,0x0a,0x67,0xcf,0x21,0xe5,0x88,0x2c,0x51,0x61,0x18,0xdd,0xdd,0xc9,0x04,0x92,0x92,0xd0,0x62,0x94,0xc2,0xfe,0xe9,0x4d,0x90,0x9d,0x84,0x15,0xa5,0x1b,0xca,0x21,0x25,0x83,0xd6,0x24,0x2e,0x09,0xac,0x02,0x82,0xc2,0x5b,0xa8,0x41,0xb9,0xaf,0x47,0xb9,0x6f,0x83,0x32,0x27,0xf8,0x4e,0xcd,0x62,0xb1,0x73,0x92,0x84,0xb1,0xd2,0x07,0xd7,0x1a,0x38,0xc4,0x13,0xc9,0x29,0x00,0xbe,0x86,0xc3,0x42,0xc2,0x46,0x75,0x18,0x1a,0x59,0x65,0xd0,0x0f,0x61,0xbe,0x28,0x8c,0x8a,0x3b,0x15,0x41,0xb7,0xa5,0x8b,0x56,0x69,0x8a,0x39,0xbe,0xc3,0xe3,0x3a,0xca,0x9c,0x60,0x8b,0x31,0xa3,0x3c,0xee,0x05,0x1c,0x6e,0x41,0x1d,0x5b,0xf3,0x96,0xd6,0x71,0xc5,0xb6,0xf5,0xd5,0xa4,0xd5,0x22,0x9d,0xa7,0xea,0x9a,0xd7,0xc7,0xc2,0xda,0xcb,0x75,0x33,0x8f,0xd5,0x9a,0x58,0x2f,0xb9,0x1f,0x5a,0x01,0x33,0x47,0x47,0x3f,0x0a,0x1b,0xf9,0x77,0x43,0xcc,0xbd,0xc2,0x3d,0x97,0x39,0x5d,0x90,0x86,0x45,0xf6,0xd4,0xac,0xab,0x0d,0x6a,0x18,0x3f,0x53,0x71,0x5e,0x02,0x96,0x84,0x9b,0xe7,0xf0,0x76,0xe4,0x86,0x90,0xcd,0xc0,0x2f,0x2e,0x52,0x28,0x37,0x92,0x3e,0xec,0x67,0xb9,0xde,0xc0,0x87,0xd7,0x6e,0x0c,0x0b,0x45,0xa2,0x6e,0xe7,0xc5,0xd7,0x5f,0x3d,0x67,0xab,0xf6,0x3a,0xb0,0x1c,0xe2,0x74,0x4e,0x8d,0x45,0xea,0x33,0x9d,0xe9,0x12,0x84,0x65,0xfb,0x5d,0x37,0x56,0x04,0x45,0x79,0x4c,0x5e,0x06,0x71,0x62,0x4c,0x0d,0x81,0x11,0x9a,0x77,0x74,0x7f,0x6c,0x1f,0xf6,0xca,0xc2,0x75,0x55,0x0e,0xc9,0x98,0xfd,0x21,0xf2,0x00,0x54,0x8c,0x7a,0x64,0x74,0x26,0x97,0xc3,0x4e,0x06,0x82,0xe6,0x46,0x53,0x8b,0x9d,0x8c,0x0f,0x1c,0xd9,0xb5,0x47,0xf0,0xe3,0xe7,0xfb,0x57,0x4e,0xb7,0x6c,0xe8,0xd8,0xe7,0xa1,0xa4,0xa4,0x8b,0x45,0x36,0xf8,0x09,0x36,0x59,0x25,0x74,0xb0,0xa5,0x09,0x58,0x7b,0xf9,0xfd,0x57,0xaf,0x71,0x76,0x01,0x78,0x17,0xbd,0x4e,0x71,0xe6,0x7d,0xeb,0x99,0xf7,0xd5,0x99,0x61,0xf0,0xa8,0x38,0xf3,0x5e,0x3d,0x33,0xb6,0x4d,0xe1,0x01,0x9a,0x07,0x42,0x00,0xad,0x03,0xaf,0x62,0x40,0x14,0x99,0xce,0x78,0x21,0x4f,0x3c,0x68,0xb0,0x80,0x96,0xe1,0xa2,0xe0,0x0a,0x75,0x3b,0x4c,0x35,0x3b,0x38,0x25,0xd6,0xef,0x6c,0x64,0xbc,0x0a,0xb6,0xba,0x91,0x11,0x59,0xc3,0xd6,0x9b,0xd2,0x60,0x31,0x9a,0xef,0x7c,0x69,0x9c,0x3a,0xdb,0x21,0x43,0xc7,0x53,0x00,0xb1,0x67,0x66,0x0a,0x4d,0xb7,0x14,0xbb,0x0b,0x12,0x5a,0x42,0x2f,0x7a,0xb7,0x21,0x4b,0x8b,0x78,0x61,0x79,0x71,0x09,0x73,0x1a,0x3a,0xd0,0xdd,0x7b,0x8b,0x02,0x04,0x80,0x2e,0xf1,0x4e,0x59,0x22,0x7a,0xca,0xcf,0x7c,0x07,0x78,0x13,0xd8,0x8c,0x2d,0x66,0x95,0x0f,0xc3,0x88,0xe2,0xd7,0xa9,0xe1,0xa7,0x9e,0x67,0x3c,0xa5,0x2c,0x18,0x93,0xc2,0x59,0x3a,0xda,0x83,0xa8,0xc9,0x7f,0x1f,0x44,0xe7,0xa4,0x07,0xdd,0x05,0x4e,0xdc,0x67,0x91,0x00,0x70,0x74,0xb2,0x14,0xa2,0x93,0x6f,0x02,0x97,0x07,0x51,0x39,0xf4,0x79,0xfd,0xcf,0xcf,0x53,0xa2,0xe1,0xc4,0xbd,0x7b,0xf4,0x13,0x3f,0x9a,0x83,0xc1,0xa9,0xfc,0xc4,0x0d,0x9c,0x90,0x3a,0x6d,0x55,0xdc,0x25,0x1c,0x19,0x72,0x09,0x03,0x6b,0x19,0x21,0xe5,0x05,0x09,0x3c,0x7c,0x58,0xc4,0x76,0x0f,0xd8,0xa1,0xa3,0x72,0x4e,0x18,0x3c,0x78,0x03,0xf0,0x36,0xc0,0x36,0xef,0xbf,0x72,0x92,0xdc,0x45,0xf7,0x5e,0x41,0xf0,0x82,0xc6,0x05,0x8a,0x08,0x5a,0xa7,0x28,0x20,0xd3,0x22,0xb6,0x29,0x4e,0x65,0xcc,0x3f,0xa5,0x5a,0xdf,0x25,0x3b,0xb0,0x26,0x70,0x63,0x27,0x20,0x7f,0x54,0xe6,0xfc,0x00,0x87,0xcf,0xa7,0x92,0x31,0x2e,0x0b,0x18,0x91,0xb1,0x12,0xdd,0xb4,0xc5,0x8b,0xf8,0xb0,0x7e,0x79,0x4e,0x5c,0x68,0xba,0x2d,0xe5,0x7e,0x30,0x9d,0x1c,0xd0,0x60,0x7d,0x95,0x1f,0x2f,0x89,0x5a,0x00,0xd6,0x20,0xa1,0x13,0x54,0x91,0x68,0x29,0xdf,0xce,0x59,0x49,0xa5,0x10,0x08,0x45,0xb7,0x9d,0xa3,0x28,0xe8,0xac,0xf0,0x51,0x87,0x8a,0xe6,0xf3,0xf0,0xc3,0xa7,0x60,0xe9,0x63,0x1b,0x46,0x81,0x90,0x19,0x62,0x97,0xf8,0x51,0xe0,0x79,0x9f,0xd3,0xb8,0x8b,0xc8,0xb9,0x8d,0x15,0x8f,0x67,0x33,0x71,0x85,0xa1,0xde,0x89,0xbb,0x9a,0xdc,0xf9,0xc3,0xd2,0x30,0xdc,0xa8,0x0a,0x20,0xa6,0x3b,0xd4,0xfb,0xb1,0x43,0xf0,0x85,0x5f,0x51,0x63,0x44,0xd2,0xf3,0x77,0x60,0xbf,0x3f,0x10,0xde,0xc1,0x14,0xa7,0x33,0xc9,0xbf,0xd3,0xd4,0x82,0x1e,0x40,0x14,0x4c,0x5f,0x65,0xaf,0x0c,0x87,0xe7,0x10,0x2d,0x3e,0xe4,0x23,0xd2,0x50,0x1e,0x8f,0x19,0x46,0xdd,0xf0,0x7d,0x71,0x38,0x4f,0xe8,0x19,0x30,0xfc,0x38,0x22,0x8d,0x7c,0x20,0xf5,0x06,0x9e,0x99,0x57,0xf9,0x67,0x4a,0xa2,0x3d,0xf5,0xd8,0x80,0xe6,0xfd,0x83,0x8f,0x59,0x70,0xba,0x39,0xc3,0xc4,0x00,0x64,0xf4,0x14,0xb8,0x9c,0x3e,0xf8,0x48,0xd9,0xba,0x79,0x08,0x93,0xc0,0x17,0x3a,0xd5,0xcd,0x7b,0x66,0x59,0x0b,0xfc,0xcd,0x45,0x37,0xc7,0x93,0x49,0xb3,0x9f,0xac,0x88,0xdf,0x8d,0x48,0x1c,0xc2,0x44,0x40,0x64,0xe6,0x96,0xf8,0xb5,0x25,0x68,0xbe,0x11,0x08,0x96,0xcb,0xee,0xfb,0x88,0xc0,0x60,0x20,0x25,0x09,0x8c,0x07,0x1f,0x73,0x3c,0x37,0xf0,0xab,0x05,0xdf,0x8d,0x57,0xc4,0x39,0x85,0xf0,0x69,0x25,0xd8,0x96,0x7e,0xf0,0x31,0xc3,0xd7,0x67,0x87,0x6e,0xde,0x8b,0xc5,0xa3,0x1f,0x70,0xc9,0xc4,0x8a,0xc9,0xf6,0x9b,0xad,0x5a,0xe6,0xda,0x72,0x07,0x21,0x2d,0x1c,0xfa,0xb5,0xdc,0x8c,0x98,0xb4,0x85,0x87,0x9b,0x94,0x54,0x4c,0x76,0x6d,0xa0,0x6f,0x43,0x50,0xae,0xfc,0xe2,0x26,0x5b,0x01,0x19,0x0f,0x2d,0xf5,0x05,0x12,0x76,0x8c,0x35,0x57,0x7a,0xd0,0xa2,0x56,0x63,0x97,0x9d,0x9b,0x0a,0x27,0x4b,0x27,0xcb,0x48,0xd3,0xf9,0xda,0x45,0xfd,0x2a,0x23,0xec,0xd0,0x54,0xa3,0x8a,0x4b,0x28,0x89,0xb8,0x42,0xc1,0x14,0x45,0xf2,0x9e,0x92,0xae,0xfc,0x0e,0x6a,0xf2,0x3b,0x68,0xc8,0x31,0xca,0x41,0x79,0xc9,0xb2,0x1b,0x7a,0xa2,0x4f,0x71,0xbd,0xa1,0xab,0x10,0x44,0xcf,0x3c,0xaf,0xdb,0x61,0x97,0x76,0x78,0x4c,0xee,0x43,0x25,0x7b,0x6d,0x01,0xd9,0x72,0x30,0xa7,0x71,0x26,0xf0,0x6d,0xcf,0x85,0x5d,0x45,0x10,0x88,0xa5,0x88,0x2b,0x7c,0x26,0x40,0xb0,0xad,0x3a,0x7f,0x87,0x3a,0xa0,0xe4,0x5e,0x4e,0x90,0x8c,0xb3,0x33,0x90,0xb2,0xe5,0x64,0x21,0x88,0xad,0x11,0x5e,0xd3,0x65,0x62,0x2a,0x48,0x98,0x31,0xc3,0x79,0x61,0x32,0xcb,0x33,0xd2,0x8c,0xe5,0x5c,0x6d,0xd9,0xea,0xc1,0x1b,0x97,0xc5,0x2f,0x71,0xe0,0x77,0xd9,0x60,0x66,0x23,0x15,0x1c,0x38,0x81,0x84,0xa0,0x20,0xa2,0x3a,0x31,0x15,0x5b,0x05,0x5c,0x5e,0x1a,0x99,0xe5,0xf1,0x94,0x86,0x5b,0x9a,0xbe,0xd0,0x79,0x7f,0xa2,0x2a,0xf3,0x33,0x64,0xd9,0x98,0xf2,0x48,0x91,0x44,0x90,0x2c,0x32,0x20,0xfc,0x51,0xb3,0x26,0x41,0xed,0xb0,0x24,0x9b,0xd2,0x92,0x0f,0xc0,0x64,0x9e,0xd5,0x37,0x8d,0x23,0xf3,0x5a,0x48,0xc2,0x41,0x9b,0x08,0x2c,0x4e,0xe8,0x30,0x88,0x7e,0x43,0x61,0x28,0x62,0x6d,0x1e,0x5b,0xe8,0x32,0x48,0xe3,0xe5,0x18,0xa5,0x1b,0x4f,0x83,0x21,0x03,0x96,0x46,0x53,0x45,0x6e,0x1e,0x2c,0x57,0x6f,0x32,0xed,0xe8,0x82,0x31,0x72,0xe9,0xc6,0xd2,0xc8,0x56,0x1a,0x43,0xa3,0x9b,0x6e,0x10,0x0b,0x7f,0xa5,0x51,0xd0,0x2a,0xd6,0x0c,0x81,0xf8,0x57,0x82,0xc7,0x18,0xa8,0x1b,0x41,0x63,0xa4,0xa4,0x3a,0x31,0x5c,0x59,0x65,0x7d,0x9b,0x92,0xc9,0x6e,0x5d,0x1f,0x60,0xc1,0x61,0x04,0x61,0x97,0x27,0x78,0xf2,0xb2,0x15,0x0a,0x98,0x8e,0xdc,0xff,0x41,0x5f,0x2a,0x65,0xe7,0xf4,0x37,0x61,0xca,0x19,0x50,0x09,0xfb,0x50,0xe4,0x32,0xc7,0x29,0x0a,0x41,0xb4,0x6b,0xfc,0xf8,0x9e,0xcd,0x89,0xe9,0x4f,0x41,0x5d,0x99,0xfa,0xeb,0x68,0x09,0xc2,0x32,0x29,0xe0,0x55,0x9e,0x25,0x09,0x18,0x9f,0xc1,0xcc,0x32,0x46,0x8f,0xc9,0x9b,0x1c,0x58,0x98,0xe5,0xaa,0x5c,0xe3,0xc0,0x72,0x31,0x71,0x8f,0x51,0x24,0x5e,0xf2,0xfa,0x56,0x08,0x5e,0x86,0x3c,0x7d,0xf0,0xe0,0xe3,0x0b,0x30,0xe2,0x3e,0xfc,0x8e,0xa8,0x7b,0x02,0xae,0xbe,0x9e,0x17,0x26,0xab,0x5c,0x27,0xdb,0x52,0x40,0xfd,0xa9,0x1a,0x5b,0x41,0x38,0x6a,0x74,0xb2,0x21,0x5e,0xd3,0x8c,0x10,0xeb,0x8b,0x3a,0xa9,0x62,0x45,0x53,0x92,0x2b,0x4b,0xb0,0x0b,0x08,0x72,0x4f,0x59,0x21,0xb6,0x94,0x43,0x4b,0x4a,0x91,0x01,0xb0,0xb4,0x52,0x58,0x97,0x82,0xec,0x3b,0x74,0xc6,0x3c,0x21,0xbc,0x1a,0xc2,0x75,0x2e,0x96,0x4f,0x4a,0x45,0xfe,0xa3,0x47,0x3c,0x91,0x6b,0x53,0xe7,0x8b,0xdc,0xb5,0x2b,0x26,0x3e,0x81,0xa3,0x77,0x29,0x39,0xb9,0xd5,0xb6,0x20,0x66,0x56,0x25,0xa5,0xd7,0x3b,0x9e,0x12,0x3a,0xad,0x20,0x45,0x58,0x76,0x33,0x21,0x7b,0x95,0x54,0xf6,0x0a,0xa1,0xd4,0xb6,0x20,0xca,0xa4,0xa4,0x61,0x91,0x8e,0x34,0x6c,0x41,0x45,0x55,0x1c,0x7b,0x85,0x38,0x5a,0xd3,0x80,0xbc,0xe7,0x0b,0x93,0x5b,0x33,0x0f,0xb6,0x06,0xee,0x41,0x58,0x61,0x1e,0xc9,0xed,0xbb,0x4d,0x3e,0xa3,0x0c,0xd4,0xda,0xc4,0x86,0xcd,0x90,0x31,0x5d,0x2e,0x82,0x8b,0x49,0xcc,0x73,0xf8,0x6d,0x68,0xb0,0xce,0xdc,0x0d,0x3b,0x86,0x15,0xa1,0xf0,0x8b,0x50,0x21,0xea,0xfc,0x34,0x9c,0x96,0x5c,0x3b,0x2f,0x27,0x1b,0x06,0x48,0x17,0x11,0xa5,0xb1,0x52,0x99,0xaa,0x8d,0xd3,0x00,0x66,0x33,0x30,0x09,0x05,0x60,0xad,0x72,0x2e,0x77,0x51,0x38,0xff,0x00,0xc7,0x04,0x80,0x6a,0x80,0x83,0x78,0xfe,0x2f,0xb9,0x84,0x9a,0xba,0xbb,0x5a,0x73,0x97,0x7c,0x45,0x5d,0xad,0x5d,0xad,0xb3,0x99,0x0f,0x61,0xb2,0xbe,0xe6,0x1d,0x83,0x5c,0x84,0x44,0x2f,0x6f,0x22,0xcb,0x3b,0xeb,0x37,0x34,0x8c,0x78,0x47,0x55,0x54,0x16,0x17,0x69,0x29,0x2e,0xc2,0xc5,0x85,0x03,0xf2,0x52,0xa9,0xb9,0xf9,0x21,0xa2,0xd9,0x3f,0x3e,0xcf,0x39,0xdb,0xce,0xb5,0x74,0xf2,0xe6,0x82,0xc4,0x9e,0x7e,0x00,0xc0,0x63,0x97,0x5e,0x66,0x6b,0x3b,0x6f,0xc7,0x56,0xd6,0x9c,0xc0,0x01,0x39,0x5b,0xea,0x16,0x46,0xc6,0x8a,0xb8,0xbe,0x4a,0xff,0x49,0x41,0xec,0x20,0xc9,0xfb,0x91,0xf4,0x7c,0x63,0x9a,0xc7,0xc0,0x24,0x26,0x45,0x13,0xa4,0x71,0xa8,0x80,0x94,0x46,0x0b,0x3a,0xb4,0xa3,0x33,0x20,0x96,0x51,0x89,0xaf,0xad,0x84,0x25,0xa0,0x73,0xc3,0xc9,0x11,0xb0,0xd2,0x74,0x66,0x7c,0x5a,0x6e,0xba,0xb1,0x22,0x81,0x31,0x5b,0x2a,0x0d,0x64,0x00,0xc1,0x52,0x01,0x46,0x18,0x08,0x1b,0x5f,0x47,0x66,0x23,0x29,0xf0,0xa7,0x48,0x51,0xd2,0x35,0xbf,0xf1,0x08,0x16,0xd6,0x7c,0xff,0x0f,0xec,0x10,0x31,0x82,0xc8,0x60,0x7b,0xd7,0xa1,0xc8,0xe2,0x7b,0x88,0x0c,0xbe,0xb1,0x93,0xb6,0x9d,0xd0,0x07,0x25,0x2b,0x37,0x86,0x6a,0x0e,0x4a,0xb7,0x88,0xdc,0x33,0xc5,0xde,0xcd,0x46,0xf6,0x58,0xf9,0xc6,0x5b,0x8d,0x55,0x71,0xb2,0x31,0xb9,0x2c,0xef,0x71,0x1e,0x2b,0x8e,0x48,0xd7,0xe8,0x3a,0x40,0x84,0xe2,0xf4,0x9f,0x56,0x8a,0x6a,0x06,0x1a,0x05,0x29,0x86,0xe5,0xb2,0xcc,0x79,0xad,0x48,0x53,0xd5,0x4d,0xd4,0xac,0x28,0x36,0xd5,0x95,0x5e,0xbe,0x7e,0x55,0x98,0xc4,0x59,0x60,0x15,0x17,0xb0,0xf8,0xe5,0x2a,0xf6,0x8d,0xed,0x4a,0x84,0x8d,0x8a,0xf4,0xff,0xc1,0x7e,0x03,0xbc,0xf1,0x09,0x51,0x37,0x4c,0x00,0x00
};


char html[] =  R"rawliteral(<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width,initial-scale=1">
        <title>ESP32 OV2460</title>
        <style>
            body {
                font-family: Arial,Helvetica,sans-serif;
                background: #181818;
                color: #EFEFEF;
                font-size: 16px
            }

            h2 {
                font-size: 18px
            }

            section.main {
                display: flex
            }

            #menu,section.main {
                flex-direction: column
            }

            #menu {
                display: none;
                flex-wrap: nowrap;
                min-width: 340px;
                background: #363636;
                padding: 8px;
                border-radius: 4px;
                margin-top: -10px;
                margin-right: 10px;
            }

            #content {
                display: flex;
                flex-wrap: wrap;
                align-items: stretch
            }

            figure {
                padding: 0px;
                margin: 0;
                -webkit-margin-before: 0;
                margin-block-start: 0;
                -webkit-margin-after: 0;
                margin-block-end: 0;
                -webkit-margin-start: 0;
                margin-inline-start: 0;
                -webkit-margin-end: 0;
                margin-inline-end: 0
            }

            figure img {
                display: block;
                width: 100%;
                height: auto;
                border-radius: 4px;
                margin-top: 8px;
            }

            @media (min-width: 800px) and (orientation:landscape) {
                #content {
                    display:flex;
                    flex-wrap: nowrap;
                    align-items: stretch
                }

                figure img {
                    display: block;
                    max-width: 100%;
                    max-height: calc(100vh - 40px);
                    width: auto;
                    height: auto
                }

                figure {
                    padding: 0 0 0 0px;
                    margin: 0;
                    -webkit-margin-before: 0;
                    margin-block-start: 0;
                    -webkit-margin-after: 0;
                    margin-block-end: 0;
                    -webkit-margin-start: 0;
                    margin-inline-start: 0;
                    -webkit-margin-end: 0;
                    margin-inline-end: 0
                }
            }

            section#buttons {
                display: flex;
                flex-wrap: nowrap;
                justify-content: space-between
            }

            #nav-toggle {
                cursor: pointer;
                display: block
            }

            #nav-toggle-cb {
                outline: 0;
                opacity: 0;
                width: 0;
                height: 0
            }

            #nav-toggle-cb:checked+#menu {
                display: flex
            }

            .input-group {
                display: flex;
                flex-wrap: nowrap;
                line-height: 22px;
                margin: 5px 0
            }

            .input-group>label {
                display: inline-block;
                padding-right: 10px;
                min-width: 47%
            }

            .input-group input,.input-group select {
                flex-grow: 1
            }

            .range-max,.range-min {
                display: inline-block;
                padding: 0 5px
            }

            button {
                display: block;
                margin: 5px;
                padding: 0 12px;
                border: 0;
                line-height: 28px;
                cursor: pointer;
                color: #fff;
                background: #ff3034;
                border-radius: 5px;
                font-size: 16px;
                outline: 0
            }

            button:hover {
                background: #ff494d
            }

            button:active {
                background: #f21c21
            }

            button.disabled {
                cursor: default;
                background: #a0a0a0
            }

            input[type=range] {
                -webkit-appearance: none;
                width: 100%;
                height: 22px;
                background: #363636;
                cursor: pointer;
                margin: 0
            }

            input[type=range]:focus {
                outline: 0
            }

            input[type=range]::-webkit-slider-runnable-track {
                width: 100%;
                height: 2px;
                cursor: pointer;
                background: #EFEFEF;
                border-radius: 0;
                border: 0 solid #EFEFEF
            }

            input[type=range]::-webkit-slider-thumb {
                border: 1px solid rgba(0,0,30,0);
                height: 22px;
                width: 22px;
                border-radius: 50px;
                background: #ff3034;
                cursor: pointer;
                -webkit-appearance: none;
                margin-top: -11.5px
            }

            input[type=range]:focus::-webkit-slider-runnable-track {
                background: #EFEFEF
            }

            input[type=range]::-moz-range-track {
                width: 100%;
                height: 2px;
                cursor: pointer;
                background: #EFEFEF;
                border-radius: 0;
                border: 0 solid #EFEFEF
            }

            input[type=range]::-moz-range-thumb {
                border: 1px solid rgba(0,0,30,0);
                height: 22px;
                width: 22px;
                border-radius: 50px;
                background: #ff3034;
                cursor: pointer
            }

            input[type=range]::-ms-track {
                width: 100%;
                height: 2px;
                cursor: pointer;
                background: 0 0;
                border-color: transparent;
                color: transparent
            }

            input[type=range]::-ms-fill-lower {
                background: #EFEFEF;
                border: 0 solid #EFEFEF;
                border-radius: 0
            }

            input[type=range]::-ms-fill-upper {
                background: #EFEFEF;
                border: 0 solid #EFEFEF;
                border-radius: 0
            }

            input[type=range]::-ms-thumb {
                border: 1px solid rgba(0,0,30,0);
                height: 22px;
                width: 22px;
                border-radius: 50px;
                background: #ff3034;
                cursor: pointer;
                height: 2px
            }

            input[type=range]:focus::-ms-fill-lower {
                background: #EFEFEF
            }

            input[type=range]:focus::-ms-fill-upper {
                background: #363636
            }

            .switch {
                display: block;
                position: relative;
                line-height: 22px;
                font-size: 16px;
                height: 22px
            }

            .switch input {
                outline: 0;
                opacity: 0;
                width: 0;
                height: 0
            }

            .slider {
                width: 50px;
                height: 22px;
                border-radius: 22px;
                cursor: pointer;
                background-color: grey
            }

            .slider,.slider:before {
                display: inline-block;
                transition: .4s
            }

            .slider:before {
                position: relative;
                content: "";
                border-radius: 50%;
                height: 16px;
                width: 16px;
                left: 4px;
                top: 3px;
                background-color: #fff
            }

            input:checked+.slider {
                background-color: #ff3034
            }

            input:checked+.slider:before {
                -webkit-transform: translateX(26px);
                transform: translateX(26px)
            }

            select {
                border: 1px solid #363636;
                font-size: 14px;
                height: 22px;
                outline: 0;
                border-radius: 5px
            }

            .image-container {
                position: relative;
                min-width: 160px
            }

            .close {
                position: absolute;
                right: 5px;
                top: 5px;
                background: #ff3034;
                width: 16px;
                height: 16px;
                border-radius: 100px;
                color: #fff;
                text-align: center;
                line-height: 18px;
                cursor: pointer
            }

            .hidden {
                display: none
            }
        </style>
    </head>
    <body>
        <section class="main">
            <div id="logo">
                <label for="nav-toggle-cb" id="nav-toggle">&#9776;&nbsp;&nbsp;Home Viewers IoT | ITI 2020</label>
            </div>
            <div id="content">
                <div id="sidebar">
                    <input type="checkbox" id="nav-toggle-cb" checked="checked">
                    <nav id="menu">
						<div class="input-group" id="framesize-group">
                            <label for="framesize">Resolution</label>
                            <select id="framesize" class="default-action">
                                <option value="10">UXGA(1600x1200)</option>
                                <option value="9">SXGA(1280x1024)</option>
                                <option value="8">XGA(1024x768)</option>
                                <option value="7">SVGA(800x600)</option>
                                <option value="6">VGA(640x480)</option>
                                <option value="5" selected="selected">CIF(400x296)</option>
                                <option value="4">QVGA(320x240)</option>
                                <option value="3">HQVGA(240x176)</option>
                                <option value="0">QQVGA(160x120)</option>
                            </select>
                        </div>
<div class="input-group hidden" id="agc_gain-group">
          <label for="agc_gain">Gain</label>
                            <div class="range-min">1x</div>
                            <input type="range" id="agc_gain" min="0" max="30" value="5" class="default-action">
                            <div class="range-max">31x</div>
                      </div>
<div class="input-group" id="face_detect-group">
          <label for="face_detect">Face Detection</label>
                            <div class="switch">
                                <input id="face_detect" type="checkbox" class="default-action">
                                <label class="slider" for="face_detect"></label>
                            </div>
                      </div>
<div class="input-group" id="led-group">
          <label for="led_cmd">LED</label>
                            <div class="switch">
                                <input id="led_cmd" type="checkbox" class="default-action">
                                <label class="slider" for="led_cmd"></label>
                            </div>
                      </div>
<section id="buttons">
          <button id="get-still">Get Still</button>
                            <button id="toggle-stream">Start Stream</button>
                            
                      </section>
						
                  </nav>
					<p>Camera position (x): <span id="servopositionx" type ="number" ></span></p>
					<p>Camera position (y): <span id="servopositiony" type ="number" ></span></p>
					<nav>
						<section id="buttons">
					<button id="left" model="contents">Left</button> 
					<button id="up" model="contents">Up</button>
							</section>
						<section id="buttons">
					<button id="right" model="contents">Right</button> 
					<button id="down" model="contents">Down</button>
							</section>
						</nav>
                </div>
                <figure>
                    <div id="stream-container" class="image-container hidden">
                        <div class="close" id="close-stream"></div>
                        <img id="stream" src="">
                    </div>
                </figure>
            </div>
        </section>
        <script>
document.addEventListener('DOMContentLoaded', function (event) {
  var baseHost = document.location.origin
  var streamUrl = baseHost + ':81'
  var servovaluex = document.getElementById("servopositionx")
  var buffvaluex =90
  servovaluex.innerHTML = buffvaluex
	
  var servovaluey = document.getElementById("servopositiony")
  var buffvaluey =20
  servovaluey.innerHTML = buffvaluey
  
  const hide = el => {
    el.classList.add('hidden')
  }
  const show = el => {
    el.classList.remove('hidden')
  }

  const disable = el => {
    el.classList.add('disabled')
    el.disabled = true
  }

  const enable = el => {
    el.classList.remove('disabled')
    el.disabled = false
  }

  const updateValue = (el, value, updateRemote) => {
    updateRemote = updateRemote == null ? true : updateRemote
    let initialValue
    if (el.type === 'checkbox') {
      initialValue = el.checked
      value = !!value
      el.checked = value
    } else {
      initialValue = el.value
      el.value = value
    }

    if (updateRemote && initialValue !== value) {
      updateConfig(el);
    } else if(!updateRemote){
      if(el.id === "aec"){
        value ? hide(exposure) : show(exposure)
      } else if(el.id === "agc"){
        if (value) {
          show(gainCeiling)
          hide(agcGain)
        } else {
          hide(gainCeiling)
          show(agcGain)
        }
      } else if(el.id === "awb_gain"){
        value ? show(wb) : hide(wb)
      } else if(el.id === "face_recognize"){
        value ? enable(enrollButton) : disable(enrollButton)
      }
    }
  
  
  }
   function posvalue (el) {
	 var value 
	 switch (el.id) {
		 case 'left':
		 case 'right':
			 value = buffvaluex
			 break
		 case 'up':
		 case 'down':
			 value = buffvaluey
			 break
		 default:
			 return
	 }
	   const queryservo = `${baseHost}/control?var=${el.id}&val=${value}`

    fetch(queryservo)
      .then(response => {
        console.log(`request to ${queryservo} finished, status: ${response.status}`)
      })
   }
  function updateConfig (el) {
    let value
    switch (el.type) {
      case 'checkbox':
        value = el.checked ? 1 : 0
        break
      case 'range':
      case 'select-one':
        value = el.value
        break
      case 'button':
      case 'submit':
        value = '1'
        break
      default:
        return
    }

    const query = `${baseHost}/control?var=${el.id}&val=${value}`

    fetch(query)
      .then(response => {
        console.log(`request to ${query} finished, status: ${response.status}`)
      })
  }

  document
    .querySelectorAll('.close')
    .forEach(el => {
      el.onclick = () => {
        hide(el.parentNode)
      }
    })

  // read initial values
  fetch(`${baseHost}/status`)
    .then(function (response) {
      return response.json()
    })
    .then(function (state) {
      document
        .querySelectorAll('.default-action')
        .forEach(el => {
          updateValue(el, state[el.id], false)
        })
    })

  const view = document.getElementById('stream')
  const viewContainer = document.getElementById('stream-container')
  const stillButton = document.getElementById('get-still')
  const streamButton = document.getElementById('toggle-stream')
  const enrollButton = document.getElementById('face_enroll')
  const closeButton = document.getElementById('close-stream')
  const servoleft = document.getElementById('left')
  const servoright = document.getElementById('right')
  const servoup = document.getElementById('up')
  const servodown = document.getElementById('down')

  const stopStream = () => {
    window.stop();
    streamButton.innerHTML = 'Start Stream'
  }

  const startStream = () => {
    view.src = `${streamUrl}/stream`
    show(viewContainer)
    streamButton.innerHTML = 'Stop Stream'
  }

  // Attach actions to buttons
  stillButton.onclick = () => {
    stopStream()
    view.src = `${baseHost}/capture?$${Date.now()}`
    show(viewContainer)
  }

  closeButton.onclick = () => {
    stopStream()
    hide(viewContainer)
  }

  streamButton.onclick = () => {
    const streamEnabled = streamButton.innerHTML === 'Stop Stream'
    if (streamEnabled) {
      stopStream()
    } else {
      startStream()
    }
  }
 servoleft.onclick = () => {
	 if (buffvaluex<180) {
		 buffvaluex ++
	 }
	 servovaluex.innerHTML = buffvaluex
	 posvalue(servoleft)
	 
 }
  servoright.onclick = () => {
	 if (buffvaluex>0) {
		 buffvaluex--
	 }
	 servovaluex.innerHTML = buffvaluex
	 posvalue(servoright)
	 
 }
 servodown.onclick = () => {
	 if (buffvaluey<180) {
		 buffvaluey++
	 }
	 servovaluey.innerHTML = buffvaluey
	 posvalue(servoup)
	 
 }
 servoup.onclick = () => {
	 if (buffvaluey>0) {
		 buffvaluey--
	 }
	 servovaluey.innerHTML = buffvaluey
	 posvalue(servodown)
	 
 }
  // Attach default on change action
  document
    .querySelectorAll('.default-action')
    .forEach(el => {
      el.onchange = () => updateConfig(el)
    })

  // Custom actions
  // Gain
  const agc = document.getElementById('agc')
  const agcGain = document.getElementById('agc_gain-group')
  const gainCeiling = document.getElementById('gainceiling-group')
  agc.onchange = () => {
    updateConfig(agc)
    if (agc.checked) {
      show(gainCeiling)
      hide(agcGain)
    } else {
      hide(gainCeiling)
      show(agcGain)
    }
  }

  // Exposure
  const aec = document.getElementById('aec')
  const exposure = document.getElementById('aec_value-group')
  aec.onchange = () => {
    updateConfig(aec)
    aec.checked ? hide(exposure) : show(exposure)
  }

  // AWB
  const awb = document.getElementById('awb_gain')
  const wb = document.getElementById('wb_mode-group')
  awb.onchange = () => {
    updateConfig(awb)
    awb.checked ? show(wb) : hide(wb)
  }

  // Detection and framesize
  const detect = document.getElementById('face_detect')
  const recognize = document.getElementById('face_recognize')
  const framesize = document.getElementById('framesize')

  framesize.onchange = () => {
    updateConfig(framesize)
    if (framesize.value > 5) {
      updateValue(detect, false)
      updateValue(recognize, false)
    }
  }

  detect.onchange = () => {
    if (framesize.value > 5) {
      alert("Please select CIF or lower resolution before enabling this feature!");
      updateValue(detect, false)
      return;
    }
    updateConfig(detect)
    if (!detect.checked) {
      disable(enrollButton)
      updateValue(recognize, false)
    }
  }

  recognize.onchange = () => {
    if (framesize.value > 5) {
      alert("Please select CIF or lower resolution before enabling this feature!");
      updateValue(recognize, false)
      return;
    }
    updateConfig(recognize)
    if (recognize.checked) {
      enable(enrollButton)
      updateValue(detect, true)
    } else {
      disable(enrollButton)
    }
  }
})

        </script>
    </body>
</html>)rawliteral";
char index_html[]  = R"rawliteral(
 <!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>PBL5</title>
    <style>
      body {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 16px;
      }

      h2 {
        font-size: 18px;
      }

      section.main {
        display: flex;
      }

      #menu,
      section.main {
        flex-direction: column;
      }

      #menu {
        display: none;
        flex-wrap: nowrap;
        min-width: 340px;
        background: #363636;
        padding: 8px;
        border-radius: 4px;
        margin-top: -10px;
        margin-right: 10px;
      }

      #content {
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
      }

      figure {
        padding: 0px;
        margin: 0;
        -webkit-margin-before: 0;
        margin-block-start: 0;
        -webkit-margin-after: 0;
        margin-block-end: 0;
        -webkit-margin-start: 0;
        margin-inline-start: 0;
        -webkit-margin-end: 0;
        margin-inline-end: 0;
      }

      figure img {
        display: block;
        width: 100%;
        height: auto;
        border-radius: 4px;
        margin-top: 8px;
      }

      @media (min-width: 800px) and (orientation: landscape) {
        #content {
          display: flex;
          flex-wrap: nowrap;
          align-items: stretch;
        }

        figure img {
          display: block;
          max-width: 100%;
          max-height: calc(100vh - 40px);
          width: auto;
          height: auto;
        }

        figure {
          padding: 0 0 0 0px;
          margin: 0;
          -webkit-margin-before: 0;
          margin-block-start: 0;
          -webkit-margin-after: 0;
          margin-block-end: 0;
          -webkit-margin-start: 0;
          margin-inline-start: 0;
          -webkit-margin-end: 0;
          margin-inline-end: 0;
        }
      }

      #nav-toggle {
        cursor: pointer;
        display: block;
      }

      #nav-toggle-cb {
        outline: 0;
        opacity: 0;
        width: 0;
        height: 0;
      }

      #nav-toggle-cb:checked + #menu {
        display: flex;
      }

      .input-group {
        display: flex;
        flex-wrap: nowrap;
        line-height: 22px;
        margin: 5px 0;
      }

      .input-group > label {
        display: inline-block;
        padding-right: 10px;
        min-width: 47%;
      }

      .input-group input,
      .input-group select {
        flex-grow: 1;
      }

      .range-max,
      .range-min {
        display: inline-block;
        padding: 0 5px;
      }

      button {
        display: block;
        margin: 5px;
        padding: 0 12px;
        border: 0;
        line-height: 28px;
        cursor: pointer;
        color: #fff;
        background: #ff3034;
        border-radius: 5px;
        font-size: 16px;
        outline: 0;
      }

      button:hover {
        background: #ff494d;
      }

      button:active {
        background: #f21c21;
      }

      button.disabled {
        cursor: default;
        background: #a0a0a0;
      }

      input[type='range'] {
        -webkit-appearance: none;
        width: 100%;
        height: 22px;
        background: #363636;
        cursor: pointer;
        margin: 0;
      }

      input[type='range']:focus {
        outline: 0;
      }

      input[type='range']::-webkit-slider-runnable-track {
        width: 100%;
        height: 2px;
        cursor: pointer;
        background: #efefef;
        border-radius: 0;
        border: 0 solid #efefef;
      }

      input[type='range']::-webkit-slider-thumb {
        border: 1px solid rgba(0, 0, 30, 0);
        height: 22px;
        width: 22px;
        border-radius: 50px;
        background: #ff3034;
        cursor: pointer;
        -webkit-appearance: none;
        margin-top: -11.5px;
      }

      input[type='range']:focus::-webkit-slider-runnable-track {
        background: #efefef;
      }

      input[type='range']::-moz-range-track {
        width: 100%;
        height: 2px;
        cursor: pointer;
        background: #efefef;
        border-radius: 0;
        border: 0 solid #efefef;
      }

      input[type='range']::-moz-range-thumb {
        border: 1px solid rgba(0, 0, 30, 0);
        height: 22px;
        width: 22px;
        border-radius: 50px;
        background: #ff3034;
        cursor: pointer;
      }

      input[type='range']::-ms-track {
        width: 100%;
        height: 2px;
        cursor: pointer;
        background: 0 0;
        border-color: transparent;
        color: transparent;
      }

      input[type='range']::-ms-fill-lower {
        background: #efefef;
        border: 0 solid #efefef;
        border-radius: 0;
      }

      input[type='range']::-ms-fill-upper {
        background: #efefef;
        border: 0 solid #efefef;
        border-radius: 0;
      }

      input[type='range']::-ms-thumb {
        border: 1px solid rgba(0, 0, 30, 0);
        height: 22px;
        width: 22px;
        border-radius: 50px;
        background: #ff3034;
        cursor: pointer;
        height: 2px;
      }

      input[type='range']:focus::-ms-fill-lower {
        background: #efefef;
      }

      input[type='range']:focus::-ms-fill-upper {
        background: #363636;
      }

      .switch {
        display: block;
        position: relative;
        line-height: 22px;
        font-size: 16px;
        height: 22px;
      }

      .switch input {
        outline: 0;
        opacity: 0;
        width: 0;
        height: 0;
      }

      .slider {
        width: 50px;
        height: 22px;
        border-radius: 22px;
        cursor: pointer;
        background-color: grey;
      }

      .slider,
      .slider:before {
        display: inline-block;
        transition: 0.4s;
      }

      .slider:before {
        position: relative;
        content: '';
        border-radius: 50%;
        height: 16px;
        width: 16px;
        left: 4px;
        top: 3px;
        background-color: #fff;
      }

      input:checked + .slider {
        background-color: #ff3034;
      }

      input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        transform: translateX(26px);
      }

      select {
        border: 1px solid #363636;
        font-size: 14px;
        height: 22px;
        outline: 0;
        border-radius: 5px;
      }

      .image-container {
        position: relative;
        min-width: 160px;
      }

      .close {
        position: absolute;
        right: 5px;
        top: 5px;
        background: #ff3034;
        width: 16px;
        height: 16px;
        border-radius: 100px;
        color: #fff;
        text-align: center;
        line-height: 18px;
        cursor: pointer;
      }
      .image-container {
        width: 100%;
        max-width: 1000px; /* Tùy chỉnh kích thước khung ảnh */
        margin: 0 auto;
        border: 1px solid;
        border-image-slice: 1;
        border-image-source: linear-gradient(to right bottom, #6a5af9, #f62682);
      }
      .image-container img {
        display: block;
        width: 100%;
        height: auto;
      }
      .hidden {
        display: none;
      }
      #capture-btn-in,
      #capture-btn-out,
      #record-btn {
        margin: 10px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        background: linear-gradient(#e66465, #9198e5);
        color: #fff;
        font-size: 16px;
        cursor: pointer;
      }
      #buttons {
        justify-content: center;
        align-items: center;
        display: flex;
      }
      #capture-btn:hover,
      #capture-btn-out:hover,
      #record-btn:hover {
        background-color: #fff;
        color: #000;
      }
      .icon {
        width: 100%;
        display: flex;
        align-items: center;
        max-width: 200px; /* Tùy chỉnh kích thước khung ảnh */
        margin: 0 auto;
        border: 1px solid;
        border-image-slice: 1;
        border-image-source: linear-gradient(to right bottom, #6a5af9, #f62682);
      }
      header h1 {
        font-size: 30px;
        text-align: center;
        font-weight: 600;
        background-image: linear-gradient(to left, #553c9a, #b393d3);
        color: transparent;
        background-clip: text;
        -webkit-background-clip: text;
      }
      header{
        margin-bottom: 10px;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Nhận diện khuôn mặt</h1>
      <img class="icon" src="https://dut.udn.vn/Files/admin/images/Tin_tuc/Khac/2020/LogoDUT/image002.jpg" />
    </header>
    <div class="image-container">
      <div class="close" id="close-stream"></div>
      <img id="stream" src="" alt="Your Image" />
    </div>
    <div id="buttons">
      <button id="capture-btn-in">Điểm danh</button>
      <button id="record-btn">Quay video</button>
    </div>
    <p><span id="servopositionx" type="number"></span></p>
    <p><span id="servopositiony" type="number"></span></p>
    <nav>
      <section id="buttons">
        <button id="left" model="contents"></button>
        <button id="up" model="contents"></button>
      </section>
      <section id="buttons">
        <button id="right" model="contents"></button>
        <button id="down" model="contents"></button>
      </section>
    </nav>
    <script>
      document.addEventListener('DOMContentLoaded', function (event) {
        var baseHost = document.location.origin;
        var streamUrl = baseHost + ':81';
        var servovaluex = document.getElementById('servopositionx');
        var buffvaluex = 90;

        var servovaluey = document.getElementById('servopositiony');
        var buffvaluey = 20;

        const hide = (el) => {
          el.classList.add('hidden');
        };
        const show = (el) => {
          el.classList.remove('hidden');
        };

        const disable = (el) => {
          el.classList.add('disabled');
          el.disabled = true;
        };

        const enable = (el) => {
          el.classList.remove('disabled');
          el.disabled = false;
        };

        const updateValue = (el, value, updateRemote) => {
          updateRemote = updateRemote == null ? true : updateRemote;
          let initialValue;
          if (el.type === 'checkbox') {
            initialValue = el.checked;
            value = !!value;
            el.checked = value;
          } else {
            initialValue = el.value;
            el.value = value;
          }

          if (updateRemote && initialValue !== value) {
            updateConfig(el);
          } else if (!updateRemote) {
            if (el.id === 'aec') {
              value ? hide(exposure) : show(exposure);
            } else if (el.id === 'agc') {
              if (value) {
                show(gainCeiling);
                hide(agcGain);
              } else {
                hide(gainCeiling);
                show(agcGain);
              }
            } else if (el.id === 'awb_gain') {
              value ? show(wb) : hide(wb);
            } else if (el.id === 'face_recognize') {
              value ? enable(enrollButton) : disable(enrollButton);
            }
          }
        };
        function posvalue(el) {
          var value;
          switch (el.id) {
            case 'left':
            case 'right':
              value = buffvaluex;
              break;
            case 'up':
            case 'down':
              value = buffvaluey;
              break;
            default:
              return;
          }
          const queryservo = `${baseHost}/control?var=${el.id}&val=${value}`;

          fetch(queryservo).then((response) => {
            console.log(`request to ${queryservo} finished, status: ${response.status}`);
          });
        }
        function updateConfig(el) {
          let value;
          switch (el.type) {
            case 'checkbox':
              value = el.checked ? 1 : 0;
              break;
            case 'range':
            case 'select-one':
              value = el.value;
              break;
            case 'button':
            case 'submit':
              value = '1';
              break;
            default:
              return;
          }

          const query = `${baseHost}/control?var=${el.id}&val=${value}`;

          fetch(query).then((response) => {
            console.log(`request to ${query} finished, status: ${response.status}`);
          });
        }

        document.querySelectorAll('.close').forEach((el) => {
          el.onclick = () => {
            hide(el.parentNode);
          };
        });

        // read initial values
        fetch(`${baseHost}/status`)
          .then(function (response) {
            return response.json();
          })
          .then(function (state) {
            document.querySelectorAll('.default-action').forEach((el) => {
              updateValue(el, state[el.id], false);
            });
          });

        const view = document.getElementById('stream');
        const viewContainer = document.getElementById('stream-container');
        const checkinButton = document.getElementById('capture-btn-in');
        const streamButton = document.getElementById('record-btn');
        const enrollButton = document.getElementById('face_enroll');
        const closeButton = document.getElementById('close-stream');
        const servoleft = document.getElementById('left');
        const servoright = document.getElementById('right');
        const servoup = document.getElementById('up');
        const servodown = document.getElementById('down');

        const stopStream = () => {
          window.stop();
          streamButton.innerHTML = 'Quay video';
        };

        const startStream = () => {
          view.src = `${streamUrl}/stream`;
          streamButton.innerHTML = 'Stop video';
          console.log('Stop video');

          show(viewContainer);
        };

        // Attach actions to buttons
        checkinButton.onclick = () => {
          stopStream();
          view.src = `${baseHost}/checkin?$${Date.now()}`;
          show(viewContainer);
        };

        closeButton.onclick = () => {
          stopStream();
          hide(viewContainer);
        };

        streamButton.onclick = () => {
          console.log(streamButton.innerHTML);
          const streamEnabled = streamButton.innerHTML === 'Stop video';
          if (streamEnabled) {
            stopStream();
          } else {
            startStream();
          }
        };
        servoleft.onclick = () => {
          if (buffvaluex < 180) {
            buffvaluex++;
          }
          servovaluex.innerHTML = buffvaluex;
          posvalue(servoleft);
        };
        servoright.onclick = () => {
          if (buffvaluex > 0) {
            buffvaluex--;
          }
          servovaluex.innerHTML = buffvaluex;
          posvalue(servoright);
        };
        servodown.onclick = () => {
          if (buffvaluey < 180) {
            buffvaluey++;
          }
          servovaluey.innerHTML = buffvaluey;
          posvalue(servoup);
        };
        servoup.onclick = () => {
          if (buffvaluey > 0) {
            buffvaluey--;
          }
          servovaluey.innerHTML = buffvaluey;
          posvalue(servodown);
        };
        // Attach default on change action
        document.querySelectorAll('.default-action').forEach((el) => {
          el.onchange = () => updateConfig(el);
        });

        // Custom actions
        // Gain
        const agc = document.getElementById('agc');
        const agcGain = document.getElementById('agc_gain-group');
        const gainCeiling = document.getElementById('gainceiling-group');
        agc.onchange = () => {
          updateConfig(agc);
          if (agc.checked) {
            show(gainCeiling);
            hide(agcGain);
          } else {
            hide(gainCeiling);
            show(agcGain);
          }
        };

        // Exposure
        const aec = document.getElementById('aec');
        const exposure = document.getElementById('aec_value-group');
        aec.onchange = () => {
          updateConfig(aec);
          aec.checked ? hide(exposure) : show(exposure);
        };

        // AWB
        const awb = document.getElementById('awb_gain');
        const wb = document.getElementById('wb_mode-group');
        awb.onchange = () => {
          updateConfig(awb);
          awb.checked ? show(wb) : hide(wb);
        };

        // Detection and framesize
        const detect = document.getElementById('face_detect');
        const recognize = document.getElementById('face_recognize');
        const framesize = document.getElementById('framesize');

        framesize.onchange = () => {
          updateConfig(framesize);
          if (framesize.value > 5) {
            updateValue(detect, false);
            updateValue(recognize, false);
          }
        };

        detect.onchange = () => {
          if (framesize.value > 5) {
            alert('Please select CIF or lower resolution before enabling this feature!');
            updateValue(detect, false);
            return;
          }
          updateConfig(detect);
          if (!detect.checked) {
            disable(enrollButton);
            updateValue(recognize, false);
          }
        };

        recognize.onchange = () => {
          if (framesize.value > 5) {
            alert('Please select CIF or lower resolution before enabling this feature!');
            updateValue(recognize, false);
            return;
          }
          updateConfig(recognize);
          if (recognize.checked) {
            enable(enrollButton);
            updateValue(detect, true);
          } else {
            disable(enrollButton);
          }
        };
      });
    </script>
  </body>
</html>
)rawliteral";

